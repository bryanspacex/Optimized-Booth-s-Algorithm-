public class MajorityElement {

    // Function to find the majority element in an array
    public static int findMajorityElement(int[] nums) {
        int candidate = 0; // The current potential majority element
        int count = 0;     // Counter to track the occurrences of the candidate element

        // First loop: Find the potential candidate using the Boyer-Moore Majority Vote algorithm
        for (int num : nums) {
            if (count == 0) {
                candidate = num; // If count is zero, we set the current number as the candidate
                count = 1;       // and reset the count to 1
            } else if (candidate == num) {
                count++;         // If the current number is the same as the candidate, we increment the count
            } else {
                count--;         // Otherwise, we decrement the count as we have one different element than the candidate
            }
        }

        // Second loop: Verify the candidate and count its occurrences simultaneously
        count = 0;
        for (int num : nums) {
            if (num == candidate) {
                count++;         // Count the occurrences of the candidate element
            }
        }

        // Check if the candidate is the majority element 
        // If so, return the candidate; otherwise, return -1 (no majority element found)
        return (count > nums.length / 2) ? candidate : -1;
    }

    public static void main(String[] args) {
        int[] nums = {3, 2, 3};
        int majorityElement = findMajorityElement(nums);

        if (majorityElement != -1) {
            System.out.println("Majority element: " + majorityElement);
        } else {
            System.out.println("No majority element found.");
        }
    }
}
